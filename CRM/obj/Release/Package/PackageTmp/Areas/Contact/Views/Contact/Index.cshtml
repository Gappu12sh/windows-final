@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/_LayoutCRM.cshtml";
}
<link href="~/Theme/dist/css/FullScreenModal.css" rel="stylesheet" />
<input type="hidden" value="Contact" id="hdnPageLoadOption" />
<input id="hdnLookup" type="hidden" value="@ViewBag.Lookup" />
<input id="hdnRepresentatives" type="hidden" value="@ViewBag.Representatives" />
<div class="modal fade" id="Acc-ConfirmBox" data-backdrop="static" data-keyboard="false">
    <div class="modal-dialog modal-dialog-centered">
        <input id="confirmid" style="display:none" />
        <div class="modal-content">
            <div class="modal-header GradientModelHeader">
                <h5 class="modal-title" id="exampleModalLongTitle">Confirmation !</h5>
            </div>
            <div class="modal-body Gradientcard-outline" style="text-align:center">
                <i class="fa fa-exclamation-triangle" aria-hidden="true" style="font-size: 50px;color: #dc3545;"></i>
                <br />
                <h5>Do you want to delete ?</h5>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary Gradientbutton" data-dismiss="modal">No</button>
                    <button id="btnDelete" type="button" class="btn btn-secondary Gradientbutton" onclick="RemoveAccordion()">Yes</button>
                </div>
            </div>
            <!-- /.modal-content -->
        </div>
        <!-- /.modal-dialog -->
    </div>
</div>

<div class="row">
    <div class="col-12">
        <div class="card">
            <div class="card-header">
                <h5 class="card-title DetailsTitle">
                    Add Contact
                </h5>
                <div class="card-tools">

                    <span style="font-weight:bold;cursor:pointer"><a href="/Contact/ContactDetails/Index" class="GradientText"><i class="fas fa-backward"></i>Back</a></span>
                    <button type="button" class="btn btn-tool" data-card-widget="collapse">
                        <i class="fas fa-minus"></i>
                    </button>
                </div>
            </div>
            <div class="card-body Gradientcard-outline">
                <form class="form-sample" id="quickForm">
                    <div class="row">
                        <div class="col-lg-4">
                            <div class="form-group">
                                <label>Company Name<span style="color:#dc3545">*</span></label>
                                <input type="text" class="form-control form-control-sm" placeholder="Company Name" id="txtCompanyName">
                            </div>
                        </div>

                        <div class="col-lg-4">
                            <div class="form-group">
                                <label>Manufacturer </label>
                                <input type="text" class="form-control form-control-sm" placeholder="Manufacturer" id="txtManufacturer">
                            </div>
                        </div>
                    </div>
                    <div class="card">
                        <div class="card-header SubDetailsPageHeader">
                            <h5 class="card-title DetailsTitle">
                                COMPANY E-MAILS
                            </h5>
                            <div class="card-tools">

                                <button type="button" class="btn btn-tool" title="Add Row">
                                    <i class="fas fa-plus-circle" id="btnAddEmails" onclick="btnAddEmails()" style="float:right;cursor: pointer;"></i>
                                </button>
                                <button type="button" class="btn btn-tool" data-card-widget="collapse">
                                    <i class="fas fa-minus"></i>
                                </button>
                            </div>
                        </div>
                        <div class="card-body Gradientcard-outline">
                            <div style="overflow:auto;">
                                <table class="table table-bordered GradientdataTable" id="EmailTableData">
                                    <thead>
                                        <tr>
                                            <th style="width:15%">E-Mail Type</th>
                                            <th>E-Mail</th>
                                            <th style="width:5%">X</th>
                                        </tr>
                                    </thead>
                                    <tbody id="EmailDataBody">
                                        <tr id="0">
                                            <td class="firstEmailType">
                                                <div class="" style="width:200px">
                                                    <select class="custom-select Gradient-inpuHeight" style="width:100%" id="ddlEmail"></select>
                                                </div>
                                            </td>
                                            <td class="firstEmail">
                                                <input type="email" name="email" class="form-control form-control-sm" onchange="validateEmail(this)" placeholder="Email Id" id="txtEmailId">
                                            </td>

                                            <td></td>
                                        </tr>
                                    </tbody>
                                </table>
                            </div>
                        </div>
                    </div>
                    <div class="card">
                        <div class="card-header SubDetailsPageHeader">
                            <h5 class="card-title DetailsTitle">
                                COMPANY PHONE DETAILS
                            </h5>
                            <div class="card-tools">

                                <button type="button" class="btn btn-tool" title="Add Row">
                                    <i class="fas fa-plus-circle" id="btnAddPhone" onclick="btnAddPhone()" style="float:right;cursor: pointer;"></i>
                                </button>
                                <button type="button" class="btn btn-tool" data-card-widget="collapse">
                                    <i class="fas fa-minus"></i>
                                </button>
                            </div>
                        </div>
                        <div class="card-body Gradientcard-outline">
                            <div style="overflow:auto;">
                                <table class="table table-bordered GradientdataTable" id="PhoneTableData">
                                    <thead>
                                        <tr>
                                            <th style="width:15%">Phone Type</th>
                                            <th>Phone Number</th>
                                            <th style="width:5%">X</th>
                                        </tr>
                                    </thead>
                                    <tbody id="PhoneDataBody">
                                        <tr id="0">
                                            <td class="firstPhoneType">
                                                <div class="" style="width:200px">
                                                    <select class="custom-select Gradient-inpuHeight" style="width:100%" id="ddlPhoneType"></select>
                                                </div>
                                            </td>
                                            <td class="firstPhone">
                                                <input type="text" class="form-control form-control-sm numericValidate" placeholder="Phone Number" id="txtPhoneNo">
                                            </td>

                                            <td></td>
                                        </tr>
                                    </tbody>
                                </table>
                            </div>
                        </div>
                    </div>
                    <div class="card">
                        <div class="card-header SubDetailsPageHeader">
                            <h5 class="card-title DetailsTitle">
                                ADDRESS
                            </h5>
                            <div class="card-tools">

                                <!-- New Add Modal Button -->
                                <!--<button type="button" class="btn btn-tool" title="New City, State, Country" data-toggle="modal" data-target="#addModal">
                                    <i class="fas fa-cog" style="float:right;cursor: pointer;margin-left:10px;"></i>
                                </button>-->

                                <!-- Existing Add Address Button -->
                                <button type="button" class="btn btn-tool" title="Add Address">
                                    <i class="fas fa-plus-circle" id="btnAddAddress" style="float:right;cursor: pointer;"></i>
                                </button>

                                <!-- Collapse Button -->
                                <button type="button" class="btn btn-tool" data-card-widget="collapse">
                                    <i class="fas fa-minus"></i>
                                </button>
                            </div>
                        </div>
                        <!-- Modal for "Add" -->
                        <!-- Modal -->
                        <!--<div class="modal fade" id="addModal" tabindex="-1" role="dialog" aria-labelledby="new" aria-hidden="true">
                            <div class="modal-dialog" role="document">
                                <div class="modal-content">
                                    <div class="modal-header GradientModelHeader">
                                        <h5 class="modal-title" id="addModalLabel">Add new Location</h5>
                                        <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                                            <span aria-hidden="true">&times;</span>
                                        </button>
                                    </div>

                                    <div class="modal-body">
                                        <form>-->
                                            <!-- Row 1: Checkboxes -->
                                            <!--<div class="form-row justify-content-between" style="display: flex; flex-wrap: wrap; align-items: center;">-->
                                                <!-- City -->
                                                <!--<div class="form-group col-auto" style="margin-right: 20px;">
                                                    <div class="custom-control custom-checkbox">
                                                        <input type="checkbox" class="custom-control-input toggle" data-target="city" id="toggleCity" checked style="height: 1.5rem; width: 1.5rem;">
                                                        <label class="custom-control-label" for="toggleCity" style="font-size: 1rem; font-weight: bold; color: #333;">City</label>
                                                    </div>
                                                </div>-->

                                                <!-- State -->
                                                <!--<div class="form-group col-auto" style="margin-right: 20px;">
                                                    <div class="custom-control custom-checkbox">
                                                        <input type="checkbox" class="custom-control-input toggle" data-target="state" id="toggleState" style="height: 1.5rem; width: 1.5rem;">
                                                        <label class="custom-control-label" for="toggleState" style="font-size: 1rem; font-weight: bold; color: #333;">State</label>
                                                    </div>
                                                </div>-->

                                                <!-- Country -->
                                                <!--<div class="form-group col-auto" style="margin-right: 20px;">
                                                    <div class="custom-control custom-checkbox">
                                                        <input type="checkbox" class="custom-control-input toggle" data-target="country" id="toggleCountry" style="height: 1.5rem; width: 1.5rem;">
                                                        <label class="custom-control-label" for="toggleCountry" style="font-size: 1rem; font-weight: bold; color: #333;">Country</label>
                                                    </div>
                                                </div>
                                            </div>-->

                                            <!-- Spacer -->
                                            <!--<div class="form-row mb-2"></div>-->

                                            <!-- Row 2: Inputs in same row -->
                                            <!--<div class="form-row">-->
                                                <!-- City -->
                                                <!--<div class="form-group col" id="group-city">
                                                    <input type="text" class="form-control" id="txtnewcity" placeholder="Enter New City">
                                                </div>-->

                                                <!-- State -->
                                                <!--<div class="form-group col d-none" id="group-state">
                                                    <input type="text" class="form-control" id="txtnewstate" placeholder="Enter New State">
                                                </div>-->

                                                <!-- Country -->
                                                <!--<div class="form-group col d-none" id="group-country">
                                                    <input type="text" class="form-control" id="txtnewcountry" placeholder="Enter New Country">
                                                </div>
                                            </div>
                                        </form>
                                    </div>

                                    <div class="modal-footer">
                                        <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
                                        <button type="button" class="btn btn-primary Gradientbutton" id="saveButton" disabled>Save</button>
                                    </div>
                                </div>
                            </div>
                        </div>


                        <script>
                            // Enable/Disable save button based on input
                            document.querySelectorAll('#txtnewcity, #txtnewstate, #txtnewcountry').forEach(input => {
                                input.addEventListener('input', function () {
                                    document.getElementById('saveButton').disabled = !this.value.trim();
                                });
                            });

                            // Toggle input visibility by checkbox (only one can be checked at a time)
                            document.querySelectorAll('.toggle').forEach(toggle => {
                                toggle.addEventListener('change', function () {
                                    document.querySelectorAll('.toggle').forEach(otherToggle => {
                                        if (otherToggle !== this) {
                                            otherToggle.checked = false;
                                        }
                                    });

                                    // Hide all groups initially
                                    document.querySelectorAll('#group-city, #group-state, #group-country').forEach(group => {
                                        group.classList.add('d-none');
                                    });

                                    // Clear all input fields when toggling
                                    document.getElementById('txtnewcity').value = "";
                                    document.getElementById('txtnewstate').value = "";
                                    document.getElementById('txtnewcountry').value = "";

                                    // Disable the save button
                                    document.getElementById('saveButton').disabled = true;

                                    // Show the corresponding group if the toggle is checked
                                    const targetGroup = document.getElementById(`group-${this.dataset.target}`);
                                    targetGroup.classList.toggle('d-none', !this.checked);
                                });
                            });

                            // Save button click event
                            document.getElementById('saveButton').addEventListener('click', function () {
                                let type = "";
                                let value = "";

                                if (document.getElementById('toggleCity').checked) {
                                    type = "CITY";
                                    value = document.getElementById('txtnewcity').value.trim();
                                } else if (document.getElementById('toggleState').checked) {
                                    type = "STATE";
                                    value = document.getElementById('txtnewstate').value.trim();
                                } else if (document.getElementById('toggleCountry').checked) {
                                    type = "COUNTRY";
                                    value = document.getElementById('txtnewcountry').value.trim();
                                }

                                // Input validation
                                if (!value) {
                                    Swal.fire({
                                        icon: 'warning',
                                        title: 'Input Required',
                                        text: 'Please enter a value.'
                                    });
                                    return;
                                }

                                // Convert description to Title Case
                                const titleCaseValue = value.toLowerCase().replace(/\b\w/g, char => char.toUpperCase());

                                // Remove spaces from the Code
                                const codeValue = type + "-" + value.replace(/\s+/g, '').toUpperCase();

                                var model = {
                                    Code: codeValue,
                                    Type: type + "-TYPE",
                                    Description: titleCaseValue
                                };

                                // Send data to the server
                                fetch('/Contact/Contact/AddLookup', {
                                    method: 'POST',
                                    headers: { 'Content-Type': 'application/json' },
                                    body: JSON.stringify(model)
                                })
                                    .then(response => response.text().then(text => {
                                        let result;
                                        try {
                                            result = JSON.parse(text);
                                        } catch (e) {
                                            throw new Error("Invalid JSON format received");
                                        }

                                        // Handle server response
                                        if (result.Data && result.Data.ErrorDescription) {
                                            switch (result.Data.ErrorDescription) {
                                                case "E001":
                                                    Swal.fire('Permission Denied', "You don't have access to perform this action.", 'error');
                                                    break;
                                                case "E005":
                                                    Swal.fire('Duplicate Record', "This record already exists. Please enter a unique value.", 'warning');
                                                    break;
                                                case "E003":
                                                    Swal.fire('Save Failed', "Failed to create record. Please try again.", 'error');
                                                    break;
                                                default:
                                                    Swal.fire('Error', result.Data.ErrorDescription || "Unknown error occurred", 'error');
                                            }
                                        } else {
                                            Swal.fire({
                                                icon: 'success',
                                                title: 'Saved Successfully',
                                                text: 'The record has been saved!',
                                                confirmButtonText: 'OK'
                                            }).then(() => {
                                                location.reload();
                                            });
                                        }
                                    }))
                                    .catch(err => {
                                        Swal.fire('Server Error', err.message, 'error');
                                    });
                            });

                            // Reset modal inputs
                            function resetModalForm() {
                                document.getElementById('txtnewcity').value = "";
                                document.getElementById('txtnewstate').value = "";
                                document.getElementById('txtnewcountry').value = "";
                                document.getElementById('saveButton').disabled = true;
                            }
                        </script>-->



                        <div class="card-body Gradientcard-outline" id="divAccordionParent">

                        </div>
                    </div>

                    <div class="row">
                        <div class="col-md-12" style="margin-top:10px">
                            <div class="col-md-12" style="text-align:right;padding-right:10px">
                                <button id="btnSaveContact" class="Gradientbutton">Submit</button>
                            </div>
                        </div>
                    </div>
                </form>
            </div>
        </div>

    </div>
</div>

<script type="text/javascript" src="~/Scripts/Datetimepicker/jquery-1.8.2.min.js"></script>

<script type="text/javascript" src="~/Scripts/Datetimepicker/jquery-ui.min.js"></script>
<script type="text/javascript" src="~/Scripts/Datetimepicker/jquery-ui-timepicker-addon.js"></script>
<link rel="stylesheet" media="all" type="text/css" href="~/Scripts/DateTimePicker/jquery-ui.css" />
<link rel="stylesheet" media="all" type="text/css" href="~/Scripts/DateTimePicker/jquery-ui-timepicker-addon.css" />
<script src="~/Theme/plugins/select2/js/select2.full.min.js"></script>
<link href="~/Content/css/toastr.min.css" rel="stylesheet" />
<script src="~/Scripts/toastr.min.js"></script>
<script src="~/Scripts/PageScripts/Contact.js?version=1.1"></script>
<script src="~/Scripts/PageScripts/CustomDate.js"></script>
<script src="~/Scripts/PageScripts/CheckFormat.js"></script>
<script src="~/Scripts/PageScripts/ErrorMessage.js"></script>

<!-- Include SweetAlert2 -->
<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
