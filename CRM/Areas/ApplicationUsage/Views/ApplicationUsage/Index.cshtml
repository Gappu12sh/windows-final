
@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/_LayoutCRM.cshtml";
}
<style>
    tr:nth-child(even) {
        background-color: white;
        color: black;
    }

    tr:nth-child(odd) {
        background-color: ghostwhite;
    }
</style>
@*<input id="hdnVendorMaster" type="hidden" value="@ViewBag.VendorMaster" />*@
@*<input type="hidden" id="hiddenUserId" value="@ViewBag.UserInfo.Emp_ID" />
    <input type="hidden" id="hiddenUnitId" value="@ViewBag.UserInfo.Emp_CompanyId" />*@
<input type="hidden" id="hiddenPermission" value="@ViewBag.UserPagePermissionDetails" />
<input type="hidden" value="ViewApplicationUsageDetails" id="hdnPageLoadOption" />
<div class="modal fade" id="ConfirmBox" data-backdrop="static" data-keyboard="false">
    <div class="modal-dialog modal-dialog-centered">
        <input id="confirmid" style="display:none" />
        <div class="modal-content">
            <div class="modal-header GradientModelHeader">
                <h5 class="modal-title" id="exampleModalLongTitle">Confirmation !</h5>
            </div>
            <div class="modal-body Gradientcard-outline" style="text-align:center">
                <i class="fa fa-exclamation-triangle" aria-hidden="true" style="font-size: 50px;color: #dc3545;"></i>
                <br />
                <h5>Do you want to delete ?</h5>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary Gradientbutton" data-dismiss="modal">No</button>
                    <button id="btnDelete" type="button" class="btn btn-secondary Gradientbutton" onclick="DeleteApplicationUsage()">Yes</button>
                </div>
            </div>
            <!-- /.modal-content -->
        </div>
        <!-- /.modal-dialog -->
    </div>
</div>

@*<div class="modal fade" id="modal-lg" data-backdrop='static' data-keyboard='false'>
        <div class="modal-dialog modal-sm">
            <div class="modal-content">
                <div class="modal-header GradientModelHeader">
                    <h4 class="modal-title" id="header" style="color:black">Add Application/Usage</h4>
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close" style="color:black">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>
                <input style="display:none" type="text" id="txtApplicationUsageId">
                <div class="modal-body">

                    <div class="row">
                        <div class="col-sm-12">
                            text input
                            <div class="form-group">
                                <label>Application/Usage Name</label>
                                <input type="text" class="form-control form-control-sm" placeholder="ApplicationUsage Name" id="txtApplicationUsage">
                            </div>
                        </div>
                    </div>
                </div>
                <div class="modal-footer justify-content-between">
                    <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
                    <button type="button" class="btn btn-secondary Gradientbutton" id="btnSave">Save</button>
                    <button type="button" class="btn btn-secondary Gradientbutton" id="btnUpdate">Update</button>
                </div>
            </div>
            /.modal-content
        </div>
        /.modal-dialog
    </div>*@






<div class="modal fade" id="modal-lg" data-backdrop='static' data-keyboard='false'>
    <div class="modal-dialog modal-sm">
        <div class="modal-content">
            <div class="modal-header GradientModelHeader">
                <h4 class="modal-title" id="header" style="color:black">Add Application/Usage</h4>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close" style="color:black">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <input style="display:none" type="text" id="txtApplicationUsageId">
            <div class="modal-body">
                <div class="row">
                    <div class="col-sm-12">
                        <!-- Text input -->
                        <div class="form-group">
                            <label>Application/Usage Name</label>
                            <input type="text" class="form-control form-control-sm" placeholder="ApplicationUsage Name" id="txtApplicationUsage">

                            @*<input type="text" id="txtApplicationUsage" class="form-control" placeholder="Type to search..." />*@
                            <ul id="autocompleteList" class="list-group position-absolute d-none"></ul>
                        </div>
                    </div>
                </div>
            </div>
            <div class="modal-footer justify-content-between">
                <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
                <button type="button" class="btn btn-secondary Gradientbutton" id="btnSave">Save</button>
                <button type="button" class="btn btn-secondary Gradientbutton" id="btnUpdate">Update</button>
            </div>
        </div>
    </div>
</div>


<div class="row">
    <div class="col-sm-12">
        <div class="card Gradientcard-outline">
            <div class="card-header" id="dvAddButton" style="display:none">
                <h3 class="card-title">ApplicationUsage List </h3><button type="submit" class="btn btn-secondary Gradientbutton" id="btnAddApplicationUsage" style="float:right;font-weight:bold;" title="Add ApplicationUsage">+</button>
            </div>
            <!-- /.card-header -->
            <div class="card-body">
                <div class="table-responsive">
                    <table id="tblApplicationUsageData" style="width:100%" class="table table-bordered table-hover GradientdataTable" role="grid">
                        <thead>

                        </thead>
                        <tbody id="tblApplicationUsageDataBody"></tbody>
                        @*<tfoot>
                                <tr><th rowspan="1" colspan="1">Rendering engine</th><th rowspan="1" colspan="1">Browser</th><th rowspan="1" colspan="1">Platform(s)</th><th rowspan="1" colspan="1">Engine version</th><th rowspan="1" colspan="1">CSS grade</th></tr>
                            </tfoot>*@
                    </table>
                </div>
            </div>
        </div>
    </div>
</div>





<!-- jQuery (Only one version, loaded first) -->
<script src="https://code.jquery.com/jquery-3.4.1.min.js"></script>

<!-- jQuery UI CSS & JS (Loaded right after jQuery) -->
<link rel="stylesheet" href="https://code.jquery.com/ui/1.12.1/themes/base/jquery-ui.css">
<script src="https://code.jquery.com/ui/1.12.1/jquery-ui.min.js"></script>

<!-- Other required scripts -->
<script src="~/Theme/plugins/select2/js/select2.full.min.js"></script>
<script src="~/Scripts/toastr.min.js"></script>

<!-- Your custom scripts (Loaded AFTER jQuery & jQuery UI) -->
<script src="~/Scripts/PageScripts/ApplicationUsage.js?version=0.5"></script>
<script src="~/Scripts/PageScripts/ErrorMessage.js"></script>



@*<script>
            document.addEventListener("DOMContentLoaded", function () {
                var input = document.getElementById("txtApplicationUsage");
                var list = document.getElementById("autocompleteList");
                var appUsageNames = ["Application 1", "Application 2", "Application 4", "Application next", "Apps"];

                input.addEventListener("input", function () {
                    var value = input.value.toLowerCase();
                    list.innerHTML = "";
                    list.classList.remove("d-none");

                    var filtered = appUsageNames.filter(name => name.toLowerCase().includes(value));

                    if (filtered.length === 0) {
                        list.classList.add("d-none");
                        return;
                    }

                    filtered.forEach(function (name) {
                        var item = document.createElement("li");
                        item.classList.add("list-group-item");
                        item.textContent = name;
                        item.addEventListener("click", function () {
                            input.value = name;
                            list.classList.add("d-none");
                        });
                        list.appendChild(item);
                    });
                });

                document.addEventListener("click", function (event) {
                    if (!input.contains(event.target)) {
                        list.classList.add("d-none");
                    }
                });
            });
    </script>*@

<script>
    document.addEventListener("DOMContentLoaded", function () {
        var input = document.getElementById("txtApplicationUsage");
        var list = document.getElementById("autocompleteList");

        input.addEventListener("input", function () {
            var value = input.value.toLowerCase().replace(/[\s-]+/g, ''); 
            list.innerHTML = "";
            list.classList.remove("d-none");

            if (!value) {
                list.classList.add("d-none");
                return;
            }

            var startsWithMatches = [];
            var midMatches = [];

            appUsageNames.forEach(name => {
                var normalized = name.toLowerCase().replace(/[\s-]+/g, '');

                if (normalized.startsWith(value)) {
                    startsWithMatches.push(name);
                } else if (normalized.includes(value)) {
                    midMatches.push(name);
                }
            });

            // Merge results: prioritize "starts with" matches, then "contains" matches
            var filtered = [...startsWithMatches, ...midMatches].slice(0, 5); // Take top 5

            if (filtered.length === 0) {
                list.classList.add("d-none");
                return;
            }

            filtered.forEach(function (name) {
                var item = document.createElement("li");
                item.classList.add("list-group-item");
                item.textContent = name.toUpperCase();
                item.addEventListener("click", function () {
                    input.value = name;
                    list.classList.add("d-none");
                });
                list.appendChild(item);
            });
        });

        document.addEventListener("click", function (event) {
            if (!input.contains(event.target) && !list.contains(event.target)) {
                list.classList.add("d-none");
            }
        });
    });
</script>


